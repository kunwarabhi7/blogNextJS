import NavBar from "@/components/NavBar";
import { db, storage } from "@/utils/firebase";
import { addDoc, collection, Timestamp } from "firebase/firestore";
import { getDownloadURL, ref, uploadBytesResumable } from "firebase/storage";
import Head from "next/head";
import React, { useState } from "react";

const createablog = () => {
  const [formData, setFormData] = useState({
    title: "",
    content: "",
    image: "",
    createdAt: Timestamp.now().toDate(),
  });

  const [progressBar, setProgressBar] = useState(0);

  const handleChange = (e) => {
    e.preventDefault()
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleImageChange = (e) => {
    e.preventDefault()
    setFormData({ ...formData, image: e.target.files[0] });
  };

  const PostBlog = () => {
    if (!formData.title || !formData.content || !formData.image) {
      alert("Please fill all fields");
      return;
    }

    const storageRef = ref(
      storage,
      `/images/${Date.now()}${formData.image.name}`
    );
    const uploadedImage = uploadBytesResumable(storageRef, formData.image);
    alert('Photo Uploaded')


    uploadedImage.on(
      "state_changed",
      ((snapshot) => {
        const ProgressBarValue = Math.round(
          (snapshot.bytesTransferred / snapshot.totalBytes) * 100
        );
        setProgressBar(ProgressBarValue);
      },
      (err) => {
        console.log(err);
      },
      () => {
        setFormData({
          title: "",
          description: "",
          image: "",
        });
        getDownloadURL(uploadedImage.snapshot.ref).then((url) => {
          const postRef = collection(db, "blog");
          addDoc(postRef, {
            title: formData.title,
            content: formData.content,
            imageUrl: url,
            createdAt: Timestamp.now().toDate(),
          })
            .then(() => {
              alert("Posted Successfully");
              setProgressBar(0);
            })
            .catch((err) => {
              console.log(err);
            });
        });
      })
    );
  };

  return (
    <div className="bg-black text-white w-full p-16 mt-16 md:mt-0  h-screen">
      <Head>
        <title>Create a BLOG</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar />
      <form>
        <div className="relative z-0 w-full my-12 group ">
          <input
            type="text"
            className="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
            placeholder=""
            required
            value={formData.title}
            name="title"
            onChange={(e) => handleChange(e)}
          />
          <label
            htmlFor="floating_email"
            className="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
          >
            Title
          </label>
        </div>

        <label className="block mb-2 text-sm font-medium text-gray-900 dark:text-white overflow-y-scroll ">
          Blog Content
        </label>
        <textarea
          name="content"
          value={formData.content}
          onChange={(e) => handleChange(e)}
          id="message"
          rows="4"
          className="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
          placeholder="Leave a comment..."
        ></textarea>

        <label className="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
          Upload file
        </label>
        <input
          className="block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400"
          type="file"
          accept="image/*"
          name="image"
          
          onChange={(e) => handleImageChange(e)}
        />
        <div
          className="mt-1 text-sm text-gray-500 dark:text-gray-300"
          id="user_avatar_help"
        >
          A profile picture is useful to confirm your are logged into your
          account
        </div>
        <div class="w-full bg-gray-200 rounded-full dark:bg-gray-700 my-5">
          <div
            class="bg-blue-600 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full"
            style={{ width: `${progressBar}%` }}
          >
            {" "}
            {progressBar}
          </div>
        </div>
        <button
          onClick={PostBlog}
          type="submit"
          className="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
        >
          Post
        </button>
      </form>
    </div>
  );
};

export default createablog;
